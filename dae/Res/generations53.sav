\section{Parser}

######                 General    ######
--help=0                                 # -h : Prints this message
--stopOnUnknownParam=1                   # Stop if unkown param entered
--seed=1318604045                        # -S : Random number seed

######    Evaluation              ######
--fitness-weight=10                      # -W : Unknown weight in the feasible and unfeasible fitness computation
--fitness-penalty=2                      # -w : Penalty in the unfeasible fitnesses computation
--bmax-init=10000                        # -B : Number of allowed expanded nodes for the initial computation of b_max
--bmax-fixed=0                           # -b : Fixed number of allowed expanded nodes. Overrides bmaxinit if != 0
--bmax-last-weight=3                     # -T : Weighting for the b_max used during the last search towards the end goal (must be strictly positive)
--bmax-ratio=0.01                        # -J : Satisfying proportion of feasible individuals for the computation of b_max
--bmax-increase-coef=2                   # -K : Multiplier increment for the computation of b_max

######    Evolution Engine        ######
--popSize=10                             # -P : Population Size
--plusOrComma=Comma                      # Plus (parents+offspring) or Comma (only offspring) for replacement
--replaceTourSize=1                      # Size of Replacement Tournament (1->deterministic (hum, pas logique ;-(
--removeDuplicates=0                     # Does not allow duplicates in replacement (if possible)
--weakElitism=1                          # Weak Elitism in replacement

######    Initialization          ######
--lmax-initcoef=2                        # -C : l_max will be set to the size of the chrono partition * this coefficient
--lmin=1                                 # -l : Minimum number of goals in a decomposition

######    Logger                  ######
--verbose=quiet                          # -v : Set the verbose level
--print-verbose-levels=0                 # -l : Print verbose levels
--output=                                # -o : Redirect a standard output to a file

######    Misc                    ######
--plan-file=plan.soln                    # -F : Plan file backup

######    Output - Disk           ######
--resDir=Res                             # Directory to store DISK outputs
--eraseDir=1                             # erase files in dirName if any

######    Parallelization         ######
--parallelize-loop=0                     # Enable memory shared parallelization into evaluation's loops
--parallelize-dynamic=0                  # Enable dynamic memory shared parallelization
--parallelize-prefix=results             # Here's the prefix filename where the results are going to be stored
--parallelize-nthreads=1                 # Define the number of threads you want to use, nthreads = 0 means you want to use all threads available
--parallelize-enable-results=0           # Enable the generation of results
--parallelize-do-measure=0               # Do some measures during execution

######    Persistence             ######
--saveFrequency=0                        # Save every F generation (0 = only final state, absent = never)
--status=./dae.status                    # Status file

######    Problem                 ######
--domain=../openstacks-strips/p01-domain.pddl # -D : PDDL domain file REQUIRED 
--instance=../openstacks-strips/p01.pddl # -I : PDDL instance file REQUIRED 

######    Selection               ######
--tournament=5                           # -t : Size of the deterministic tournament for the selection
--offsprings=700                         # -f : Number of offsprings to produces

######    Stopping criterions     ######
--max-seconds=30                         # -i : Maximum number of user seconds in CPU for the whole search, set it to 0 to deactivate (1800 = 30 minutes)
--gen-min=50                             # -n : Minimum number of iterations
--gen-steady=1                           # -s : Number of iterations without improvement
--gen-max=70                             # -x : Maximum number of iterations
--runs-max=1                             # -r : Maximum number of runs, if x==0: unlimited multi-starts, if x>1: will do <x> multi-start

######    Variation               ######
--radius=2                               # -R : Number of neighbour goals to consider for the addGoal mutation
--proba-change=0.8                       # -c : Probability to change an atom for the changeAtom mutation
--proba-del-atom=0.8                     # -d : Average probability to delete an atom for the delAtom mutation
--w-delgoal=1                            # -a : Relative weight defining the probability to call the delGoal mutation
--w-addgoal=3                            # -A : Relative weight defining the probability to call the addGoal mutation
--w-delatom=1                            # -g : Relative weight defining the probability to call the delAtom mutation
--w-addatom=1                            # -G : Relative weight defining the probability to call the addAtom mutation
--proba-cross=0.2                        # -c : Probability to apply a cross-over
--proba-mut=0.8                          # -m : Probability to apply one of the mutation

\section{eoPop}
10
2.10417 1  (Decomposition[1]: (Goal[4]: (Atom[1]: (shipped o5)) (Atom[1]: (made p2)) (Atom[1]: (shipped o3)) (Atom[1]: (shipped o2))) )
2.10417 1  (Decomposition[1]: (Goal[4]: (Atom[1]: (shipped o5)) (Atom[1]: (made p2)) (Atom[1]: (shipped o3)) (Atom[1]: (shipped o2))) )
2.10417 1  (Decomposition[1]: (Goal[4]: (Atom[1]: (shipped o5)) (Atom[1]: (made p2)) (Atom[1]: (shipped o3)) (Atom[1]: (shipped o2))) )
2.10417 1  (Decomposition[1]: (Goal[4]: (Atom[1]: (shipped o5)) (Atom[1]: (made p2)) (Atom[1]: (shipped o3)) (Atom[1]: (shipped o2))) )
2.10417 1  (Decomposition[1]: (Goal[4]: (Atom[1]: (shipped o5)) (Atom[1]: (made p2)) (Atom[1]: (shipped o3)) (Atom[1]: (shipped o2))) )
2.10417 1  (Decomposition[1]: (Goal[4]: (Atom[1]: (shipped o5)) (Atom[1]: (made p2)) (Atom[1]: (shipped o3)) (Atom[1]: (shipped o2))) )
2.10417 1  (Decomposition[1]: (Goal[4]: (Atom[1]: (shipped o5)) (Atom[1]: (made p2)) (Atom[1]: (shipped o3)) (Atom[1]: (shipped o2))) )
2.10417 1  (Decomposition[1]: (Goal[4]: (Atom[1]: (shipped o5)) (Atom[1]: (made p2)) (Atom[1]: (shipped o3)) (Atom[1]: (shipped o2))) )
2.10417 1  (Decomposition[1]: (Goal[4]: (Atom[1]: (shipped o5)) (Atom[1]: (made p2)) (Atom[1]: (shipped o3)) (Atom[1]: (shipped o2))) )
2.10417 1  (Decomposition[1]: (Goal[4]: (Atom[1]: (shipped o5)) (Atom[1]: (made p2)) (Atom[1]: (shipped o3)) (Atom[1]: (shipped o2))) )

\section{Mersenne-Twister}
2246087198 1033220487 1639816244 1044166382 2062347793 1239717100 1170521274 352189062 975931811 3706477486 2370407988 141069576 1818778408 708819409 3917852940 3177568490 2207761510 2877912324 3978776599 959652318 1600269441 2399591641 747431743 1177319541 3526594674 2967000229 681991955 1059301030 3624790537 304815545 387495645 2130681925 704218450 4182518051 3329677364 2588550899 887503888 3505663923 4117590643 3345287172 3887644341 1469481128 1949726613 2949484100 509790216 3176119761 1200652241 52858850 561724402 3279492145 1472836517 30762592 1977990994 3331886510 2509995019 3644663360 3281754526 3871639536 801770535 2278987631 240621095 3896677199 224811887 4246778688 1551181773 1582923428 1816593415 1517786111 682175264 2495854512 477049241 1577791779 1685149211 2736571189 3524177154 2079454381 959611611 2370025236 1379882216 3735141119 964755568 1883959229 4143469934 2376896112 759578302 2417871036 944574843 2903008416 1998421707 3996448945 2402972587 3895010316 686393453 4124341336 2825532274 1050641540 307935256 1745109194 2675131635 1280947122 3176829751 2874334642 1816336441 3319767102 1764646754 4245716914 67283557 4210703660 4074180225 1010241066 4251517135 2299688724 1306021058 3859706053 236253186 3319053474 4027432338 838425737 146736318 2025639500 1038317412 2443840218 1106701970 3693227538 3886810518 945368878 2187111944 1284253551 2068547202 903944496 2416613896 801490482 1047080318 2274845384 2308565099 4223940551 28676583 3844202444 4027012715 935106030 2036711472 3280842461 3345096931 1966833448 3240887645 1359107234 4249229186 2204924326 1907306903 3530798636 739282253 3126592393 2657605212 1287426516 3182952678 248104450 2233916175 537523874 4180806495 1140822469 2225903833 1367124217 3056489670 424732264 2987384735 1802331955 2943085914 738301767 4056185323 991741595 2386010706 825164812 2162389831 215882742 1396610969 3229426314 2281371967 566538455 3342736619 1612222345 2477858741 764945807 3782055108 4172358480 3691098085 2489886420 3264312063 2126940835 1891540367 4287541590 1798353376 1018350827 1884894425 2624655406 218968995 3018477849 2426819606 1389163401 2789312699 2591243301 3349929976 1317155620 1509293795 3781981311 477867088 2990678713 3216403909 1615233084 1592550992 3739714516 3863392797 108313250 789213966 4124326877 1845907120 3304589977 3293138608 84594188 554849599 623960256 2846605698 316595925 1812821653 217459731 3973419790 2867286926 1616015488 1972146972 882040112 1576790060 1454260455 1433550341 2307975155 1428324324 2191694658 1873133154 29987770 2492976303 4277310935 2415777284 2656512413 3441828751 3225177343 860578745 1308440200 2428601276 3913117858 3206891845 574374650 1213796859 4144874788 539831060 3275113289 3024876938 3098899766 2245248650 2894292174 94919405 853616482 1527473806 4219803582 2230829353 3798930479 2719682558 793319577 2178231322 1268547359 708904868 3653809347 332751414 376567387 1231421932 4148692196 2762476532 2647105151 3744557582 1515907483 3536110444 2254608435 199498734 3102864892 2366907864 710900594 1786143461 3270881950 3667402887 2173372615 925555566 3504547835 3357694718 3709492051 510057848 726403829 3113419754 2843576201 1589858452 2769573537 367001701 2615021452 470619243 1882730364 4004218955 3952342997 2660376291 2609643672 2517294509 4240513626 1889819315 1338001826 2504339974 2046942262 2129041851 4269488159 1053385498 3223966661 3283540828 2203463535 3271837194 245177942 174099628 3552182652 2868743678 2126023420 877233861 2448038223 146739509 2810770221 1307015602 866563719 376820472 2029126190 916761748 4077044696 2831373809 3098145401 1874024751 18182422 692731271 1937304829 2302532905 1284640038 1231797801 2841486196 3141467363 191413763 2793818459 784297535 2259903444 3869555675 655604304 1791157507 1274363849 1392088566 3809987760 3663990707 1065523804 9099049 4076404264 2650243063 1405892592 1377670513 2335027979 9814921 1841125745 2761570518 3329909584 1129286451 1076128394 1668465307 1850804828 3182886728 2197064758 707383222 369009418 3446296606 2445965128 299141284 4064529875 2024799652 850404819 3078088076 1705549885 1571495011 3074521737 612083934 245023280 543069299 2346138630 1691988069 4006154214 2107288303 2673975705 569477663 1459140280 764828773 2278666656 3983798404 3534937026 459507838 2427519409 3625659004 4271476137 3952015815 1448510231 108408224 583316012 2561760362 483576879 531235721 114595549 3682893922 3947101261 3827088689 1571534668 1019866501 2445520019 3391930289 3762201260 1375470100 2954178887 493020107 4190184211 4020897678 2848895460 2480905120 3318661249 554255046 2292033216 2993422296 541392950 1781830579 3734610748 1687116973 313405656 2283822894 3183910540 67705533 1895123063 3781135300 1709546015 973376859 2961643884 3398471777 1387090560 742019418 1992704010 3421586220 475221935 2799029233 396730420 970355623 1401805742 1989733337 2769845577 421504035 2249421976 2259750756 3197953954 370571309 2788954325 4047563620 433474979 1478210357 1256723778 4278876719 812823879 2271789327 1807073483 4020921480 3151429564 4293324353 3922008116 4216520008 568018252 1282993951 1276396083 3675710948 3434569209 478073895 910035710 3438456217 164917956 1511214733 2430709626 85608594 100276907 3717166495 1603633460 682344695 346686971 744373550 1975400873 2613602560 1329646562 986735629 2392014356 265413293 1837715380 3713661326 1442739582 193403912 2596347852 2857650533 209008739 237480528 1237658877 37656853 2208346367 27917193 1290137864 4125052618 56767102 437542314 2996966163 2579990421 2986838125 2859596155 1229512723 3748934628 1464042660 2401644367 65104890 790074132 2745570408 2736971159 2984083888 1575518634 2114352390 2536019458 1955366427 3677386059 3700849434 10928753 3605855320 2074555600 3143098958 2508025746 1777480037 3186474637 2688223181 756839142 499990682 3982664614 4213434956 2960581404 2646786343 986386985 190018029 3853419808 586483585 3838888575 1953195559 658174 2989301319 92031107 461383159 242862437 1536915407 3943516415 1535171512 762385266 106475071 3384998505 3973267112 3603208914 4000815453 2166689314 1978977650 3887610133 261985582 4181678489 3664569250 1098300265 3032434091 3592663657 3089282755 4075119928 2731063858 3817935590 1890683796 1410547300 4047657407 358442960 3379713403 1740509173 579227574 522683312 2476517020 651031890 3438020101 3262670928 3977688658 4095733693 2384733537 2844578577 4211554323 1554834618 1959901307 2263170774 1128279007 246410304 721214267 3952331831 2188127424 707616184 291064701 1833381697 1678518331 2464869341 2862330670 3193481077 905039246 2871322483 3723840634 2126579517 3934068061 3610037167 2353344710 1083590957 3985116829 45797634 2942873239 3306290823 4018387339 395 229 0 0
